{"UniProtKeywords":{"author":null,"declares":{"name":"UniProtKeywords","parameters":[],"sourceMap":{"File":"annotations.R","Line":"5","Method":{"Method":"UniProtKeywords","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"UniProtKeywords"},"max_dzi_level":{"author":null,"declares":{"name":"max_dzi_level","parameters":[{"name":"slide.file","text":null}],"sourceMap":{"File":"max_dzi_level.R","Line":"1","Method":{"Method":"max_dzi_level","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"max_dzi_level"},"plot_velocity":{"author":null,"declares":{"name":"plot_velocity","parameters":[{"name":"x","text":null},{"name":"y","text":null},{"name":"vx","text":null},{"name":"vy","text":null},{"name":"class","text":null}],"sourceMap":{"File":"plot_velocity.R","Line":"10","Method":{"Method":"plot_velocity","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"x","text":"the x dimension value of single cell embedding result"},{"name":"y","text":"the y dimension value of single cell embedding result"},{"name":"vx","text":"the dimension x of the velocity embedding result"},{"name":"vy","text":"the dimension y of the velocity embedding result"},{"name":"class","text":"the cluster label of each corresponding single cells"}],"returns":null,"see_also":"","title":"plot single cells RNA velocity scatter"},"load.human_genes":{"author":null,"declares":{"name":"load.human_genes","parameters":[],"sourceMap":{"File":"uniprot.R","Line":"3","Method":{"Method":"load.human_genes","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"load.human_genes"},"human_genes.annotations":{"author":null,"declares":{"name":"human_genes.annotations","parameters":[{"name":"human.genes","text":"NULL"},{"name":"index","text":"'Bgee'"}],"sourceMap":{"File":"uniprot.R","Line":"10","Method":{"Method":"human_genes.annotations","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":"human_genes.annotations"},".onLoad":{"author":null,"declares":{"name":".onLoad","parameters":[],"sourceMap":{"File":"zzz.R","Line":"7","Method":{"Method":".onLoad","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":null,"details":null,"examples":null,"keywords":null,"parameters":null,"returns":null,"see_also":null,"title":".onLoad"},"plot_class":{"author":null,"declares":{"name":"plot_class","parameters":[{"name":"spots.class","text":null},{"name":"colors","text":"'paper'"},{"name":"title","text":"'Spatial Spot Class'"},{"name":"padding","text":"'padding: 150px 350px 200px 200px;'"}],"sourceMap":{"File":"class.R","Line":"9","Method":{"Method":"plot_class","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"spots_class","text":"should be a collection of the spot class\r\nannotation data or a dataframe object that contains the\r\nspot annotation data."}],"returns":null,"see_also":"","title":"plot spot class map"},"deconv_spatial":{"author":null,"declares":{"name":"deconv_spatial","parameters":[{"name":"expr.mat","text":null},{"name":"n.layers","text":"4"},{"name":"top.genes","text":"1000"},{"name":"alpha","text":"2"},{"name":"beta","text":"0.5"},{"name":"iteration","text":"150"},{"name":"prefix","text":"'class'"},{"name":"make.gene.filters","text":"TRUE"},{"name":"filter.range","text":"[0.05, 0.95]"},{"name":"unify.scale","text":"10"},{"name":"log.norm","text":"TRUE"},{"name":"n.threads","text":"NULL"}],"sourceMap":{"File":"deconv_matrix.R","Line":"29","Method":{"Method":"deconv_spatial","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"Reference-free cell-type deconvolution of pixel-resolution spatially resolved transcriptomics data","details":"the generated expression matrix object could be save as csv matrix by use\r\nthe function ``geneExpression::write.expr_matrix`` from the GCModeller package.","examples":"","keywords":[],"parameters":[{"name":"expr_mat","text":"a dataframe object or a GCModeller expression matrix object, the matrix\r\nobject should be in format of spatial spot in rows and the gene features in\r\ncolumns."},{"name":"n_layers","text":"an integer value for specific the cell layer class number"},{"name":"top_genes","text":"set the number of top genes when export the expression matrix\r\nin each cell layers"},{"name":"n_threads","text":"default null means controls the thread number for parallel sampling via\r\nthe r environment config: ``getOption(\"n_threads\")``."}],"returns":"A tuple list object that contains multiple result object inside:\r\n1. single_cells: an expression matrix object that contains the single cell data\r\n2. deconv_spatial: an expression matrix object that contains the cell\r\nlayer deconvolution result data\r\n3. cell_layers: the cell layer composition data\r\n4. gibbs_LDA: the result of the LDA gibbs sampling result outputs, the top\r\nfeatures in each cell class","see_also":"","title":"Make spatial matrix deconvolution"},"__spot_class":{"author":null,"declares":{"name":"__spot_class","parameters":[{"name":"cell.layers","text":null},{"name":"color","text":"'paper'"}],"sourceMap":{"File":"deconv_matrix.R","Line":"77","Method":{"Method":"__spot_class","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"use the max value column index as the cell class label","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"Create spot class annotation"},"single_nmf":{"author":null,"declares":{"name":"single_nmf","parameters":[{"name":"x","text":null},{"name":"dims","text":"9"},{"name":"max.iters","text":"1000"},{"name":"n.threads","text":"8"}],"sourceMap":{"File":"nmf.R","Line":"49","Method":{"Method":"single_nmf","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"NMF has become a powerful tool in the analysis of single-cell genomics\r\ndata due to its ability to decompose high-dimensional data into a lower-dimensional\r\nrepresentation that captures biologically meaningful patterns. In the context of\r\nsingle-cell transcriptomics, for example, NMF can be used to identify distinct\r\ncell types or states by clustering the gene expression profiles of individual\r\ncells.\r\nHere's how NMF is applied in single-cell genomics data analysis:\r\n1. **Data Representation**: Single-cell transcriptomic data is typically presented\r\nas a matrix, where rows represent genes and columns represent individual cells.\r\nThe matrix entries denote the expression levels of genes in cells, often in the\r\nform of counts or normalized expression values.\r\n2. **Dimensionality Reduction**: Due to the high dimensionality of single-cell data\r\n(tens of thousands of genes per cell), dimensionality reduction techniques like\r\nNMF are essential to extract relevant information. NMF reduces the gene expression\r\nmatrix to a lower-dimensional space by factorizing it into two non-negative\r\nmatrices: W (basis matrix) and H (coefficients matrix). The basis matrix W represents\r\nunderlying features (potential cell types or states), while the coefficient matrix\r\nH captures the membership strength of each cell to these features.\r\n3. **Biological Interpretation**: The non-negative nature of NMF ensures that the\r\nidentified features (rows in W) and the cell memberships (columns in H) are\r\ncomposed of non-negative combinations of genes and cells, respectively. This property\r\nmakes the results more interpretable in a biological context, as the features often\r\ncorrespond to distinct biological states or pathways.\r\n4. **Clustering and Subtyping**: NMF can be used to cluster cells based on their\r\nexpression profiles. The columns of the coefficient matrix H can be treated as\r\ncluster assignments, with each column representing a cell's membership in the\r\ndiscovered features. This allows researchers to identify and annotate different\r\ncell types or states present in the dataset.\r\n5. **Differential Expression Analysis**: By comparing the basis matrices obtained\r\nfrom NMF applied to different conditions or treatments, researchers can identify\r\ndifferentially expressed genes that are associated with specific cell states or\r\ntransitions.\r\n6. **Imputation and Noise Reduction**: NMF can also be used to impute missing values\r\nin single-cell data and reduce noise, improving the overall quality of the dataset.\r\n7. **Integration and Alignment**: NMF can be applied to integrate data from\r\ndifferent samples or experiments, aligning them to a common feature space\r\nand facilitating comparison across conditions.\r\nIn summary, NMF is a versatile method for the analysis of single-cell genomics data,\r\nproviding a means to uncover biologically relevant patterns, reduce noise, and\r\nintegrate information across different samples or conditions. Its non-negative\r\nconstraints make it particularly suitable for gene expression data, where the\r\ninterpretation of the factors corresponds to underlying biological processes.","examples":"","keywords":[],"parameters":[],"returns":null,"see_also":"","title":"Non-negative Matrix Factorization (NMF) on single cells data"},"plot_pie":{"author":null,"declares":{"name":"plot_pie","parameters":[{"name":"cell.layers","text":null},{"name":"x","text":"NULL"},{"name":"y","text":"NULL"}],"sourceMap":{"File":"pie.R","Line":"11","Method":{"Method":"plot_pie","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"Display the cell\/spot class distribution","examples":"","keywords":[],"parameters":[{"name":"cell_layers","text":"the cell class probablity matrix data"},{"name":"x","text":"the x axis for draw a pie, could be x scan location of the spatial data or x dimension of the single cells umap embedding result."},{"name":"y","text":"the y axis for draw a pie, could be y scan location of the spatial data or y dimension of the single cells umap embedding result."}],"returns":null,"see_also":"","title":"Plot the scatter pie data"},"vae_embedding":{"author":null,"declares":{"name":"vae_embedding","parameters":[{"name":"x","text":null},{"name":"dims","text":"9"},{"name":"batch.size","text":"100"},{"name":"iterations","text":"1000"}],"sourceMap":{"File":"VAE.R","Line":"6","Method":{"Method":"vae_embedding","Module":"declare_function","Namespace":"SMRUCC\/R#"}}},"description":"","details":"","examples":"","keywords":[],"parameters":[{"name":"x","text":"a gcmodeller HTS matrix object"},{"name":"dims","text":"the embedding dimension size"}],"returns":null,"see_also":"","title":"create single cell matrix embedding via VAE"}}