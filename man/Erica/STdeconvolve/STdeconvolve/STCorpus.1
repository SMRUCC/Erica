.\" man page create by R# package system.
.TH STDECONVOLVE 1 2000-Jan "STCorpus" "STCorpus"
.SH NAME
STCorpus \- Create document vector for run LDA mdelling
.SH SYNOPSIS
\fISTCorpus(\fBmatrix\fR as <generic> Matrix, 
\fBmin\fR as double = 0.05, 
\fBmax\fR as double = 0.95, 
\fBmake_gene_filters\fR as boolean = TRUE, 
\fBunify\fR as integer = 10, 
\fBlogNorm\fR as boolean = TRUE);\fR
.SH DESCRIPTION
.PP
Create document vector for run LDA mdelling
.PP
.SH OPTIONS
.PP
\fBmatrix\fB \fR\- 
 row is pixels and column is gene features. each 
 pixel row is a document sample in LDA model
. 
.PP
.PP
\fBmin\fB \fR\- -. 
.PP
.PP
\fBmax\fB \fR\- -. 
.PP
.PP
\fBunify\fB \fR\- -. 
.PP
.PP
\fBlogNorm\fB \fR\- -. 
.PP
.PP
\fBmake_gene_filters\fB \fR\- 
 if your matrix contains no missing values, then you should set this parameter value to FALSE, 
 otherwise all features will be removes: due to the reason of no missing value case the ratio
 greater than the default **`max`** filter threshold value.
. 
.PP
.SH VALUE
.PP
document model for run LDA modelling
.PP
.SH EXAMPLES
.PP
require(GCModeller);
 
 imports "geneExpression" from "phenotype_kit";
 
 let expr_mat = load.expr(file = "./expr.csv");
 let corpus = STCorpus(expr_mat);
 let LDA = fitLDA(corpus, k = 6);
 let deconv = getBetaTheta(LDA, corpus, top.genes = 1000);
 
 let matrix1 = singlecells(deconv, expr_mat);
 let matrix2 = deconvolve(deconv, expr_mat);
.PP
.SH SEE ALSO
STdeconvolve
.SH FILES
.PP
Erica.dll
.PP
